一、人为设置异常阈值
df[df['value']>100]

二、箱型图判断
1.绘制箱型图（自动识别数值型变量）
df.plot.box()
plt.grid(linestyle="--", alpha=0.3)
plt.show()

2.观察得到有异常的数据列
columns=[...]

3.1 IQR定位异常值
def detect_outliers(data): # data为数据中的一列
    q1 = data.quantile(0.25)
    q3 = data.quantile(0.75)
    IQR = q3-q1
    fence_low  = q1-1.5*IQR
    fence_high = q3+1.5*IQR
    outliers = data.loc[(data < fence_low) | (data > fence_high)]
    return outliers
outliers_index_list=[]
for i in columns:
  outliers_index_list.extend(list(detect_outliers(data[i]).index)) #需修改data[i]变量名
  print(f'{i}列存在的异常数据为：\n',detect_outliers(data[i]))
  print('='*20)
print('异常数据的行号为：\n',list(set(outliers_index_list)))
  
3.2 z分数定位异常值
def detect_outliers(data,threshold=3): # data为数据中的一列
    mean_d = np.mean(data)
    std_d = np.std(data)
    outliers = data.loc[np.abs((data-mean_d)/std_d)>threshold]
    return outliers
outliers_index_list=[]
for i in columns:
  outliers_index_list.extend(list(detect_outliers(data[i]).index))
  print(f'{i}列存在的异常数据为：\n',detect_outliers(data[i]))
  print('='*20)
print('异常数据的行号为：\n',list(set(outliers_index_list)))

三、异常值处理
1.不处理

2.删除异常值
data.drop(data.iloc[list(set(outliers_index_list)),:],axis=0,inplace=True)








