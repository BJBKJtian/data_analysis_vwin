# pandas.cut(x, bins, right=True, labels=None, retbins=False, precision=3, include_lowest=False, duplicates='raise')
# x：被切分的类数组（array-like）数据，必须是1维的（不能用DataFrame）；
# include_lowest：bool型的参数，表示区间的左边是开还是闭的，默认为false，也就是左开。

# 将ages平分成5个区间,且区间两边都有扩展以包含最大值和最小值。
pd.cut(ages, 5, labels=["婴儿","青年","中年","壮年","老年"])

# 给ages指定区间进行分割,分为了5个区间(0, 5],(5, 20],(20, 30],(30,50],(50,100].
pd.cut(ages, [0,5,20,30,50,100], labels=["婴儿","青年","中年","壮年","老年"])


# pd.qcut(x, q, labels=None, precision=3) 按照分位数进行分箱
# x ：一维数组或者Serise
# q ： 表示分位数的整数或者数组，如果是分位数的整数，例如4用于四分位;如果是分位数数组，例如[0,0.25,0.5,0.75,1]用于四分位数
# labels ：数组或者布尔值，默认为none，用于指定每个箱体的标签;如果是数组，长度要与分箱个数一致;如果为False，则仅返回分箱的整数指示符，即当前数据位于哪个箱子中
# precision：整数，默认3，存储和显示分箱标签的精度。

pd.qcut(df['积分'],4,labels=["低","中","高","很高"])
